<pre>
<h2>Overview</h2>
Like every optimization tool, Adina requires the developer to do two things:
  1. Split the application pages into separate chunks using dynamic imports.
  2. Define the data requirements for each page through a <strong><em>pages.js</em></strong> file.

<h3>Dynamic Imports</h3>
In order to split each page into a separate chunk, we need to import it dynamically and our bundler will generate a file per page.

The syntax for dynamic imports is as follows:
<code>const Home = lazy(() => import(/* webpackChunkName: 'home' */ 'pages/Home'))
</code>
It's essential to name each chunk using the <strong><em>webpackChunkName</em></strong> magic comment in order to generate a file with the same name. This name will be later used in the <strong><em>pages.js</em></strong> file to instruct Adina which chunk belongs to which page.

<h3>Page Definition</h3>
<code>type Page = {
  chunk: {
    path: string
    title?: string
    data?: Request[]
  }
}

type Request = RequestInit & {
  url: string
  static?: boolean
  preconnect?: string[]
}  
</code>
<h3>Example</h3>
<code>export default {
  home: {
    path: '/',
    title: 'Blogger'
  },
  about: {
    path: '/about',
    title: 'About | Blogger',
    data: [{ url: '/content/about.html', static: true }]
  },
  posts: {
    path: '/posts',
    title: 'Posts | Blogger',
    data: [{ url: '/api/posts' }]
  },
  post: {
    path: '/posts/:id',
    data: [
      {
        url: ({ id }) => `/api/posts/${id}`,
        preconnect: ['https://storage.googleapis.com/bucket', 'https://bucket.s3.amazonaws.com']
      },
      { url: ({ id }) => `/api/posts/${id}/comments` }
    ]
  }
}
</code>

<h2>In-Depth Analysis</h2>
Each property in the <strong><em>pages.js</em></strong> file represents a page in the application.
The property name must correspond to the chunk name generated by the dynamic import.

For example:
<code>const ReportPost = lazy(() => import(/* webpackChunkName: 'report-post' */ 'pages/ReportPost'))
</code>
Would be referenced in the <strong><em>pages.js</em></strong> file as:
<code>export default {
  'report-post': {},
}
</code>
A chunk cannot be named <strong><em>main</em></strong> nor any existing dependency names such as <strong><em>react</em></strong> or <strong><em>axios</em></strong> or else there will be a conflict.

Every page property must include a <strong><em>path</em></strong> property which is the URL path of the page, this informs Adina which chunk corresponds to which path.

The <strong><em>title</em></strong> property is used to set the title of the page immediately upon getting the HTML document.
The <strong><em>data</em></strong> property is an array of requests that will be sent immediately upon upon the document arrival. Each request must include a <strong><em>url</em></strong> property which is the URL of the request. The url can also be a function that will receive the route parameters as an argument.
The <strong><em>static</em></strong> property is used by the <a href="/data-preload" target="_blank">data-preload.ts</a> file.
The <strong><em>preconnect</em></strong> property is used to preconnect to the specified domains if needed.
</pre>
