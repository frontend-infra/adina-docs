<h2>What is Adina?</h2>

<br />

<pre>
Adina (<strong>Ad</strong>aptively <strong>In</strong>lined <strong>A</strong>ssets) is a collection of extension files that seamlessly integrate into any Webpack or Rspack client-side rendering project, enhancing the app's performance in an unprecedented way.
It originated from my in-depth research on CSR: <a target="_blank" href="https://github.com/theninthsky/client-side-rendering">https://github.com/theninthsky/client-side-rendering</a>

The significance of Adina can be demonstrated through a simple request chain (waterfall) diagram.
In this diagram, each arrow represents a request, and its height shows when the request is initiated. The higher the arrow, the sooner the request is sent.

This is the waterfall of a typical code-split app:
<div style="display: inline-block; max-width: 100%; overflow-x: auto">
  <svg xmlns="http://www.w3.org/2000/svg" width="940" height="90">
    <rect x="10" y="25" width="120" height="50" fill="#FF5722" rx="4" />
    <text x="70" y="55" font-size="12" text-anchor="middle" fill="white">Browser</text>

    <line x1="130" y1="35" x2="210" y2="35" stroke="currentColor" stroke-width="2" marker-end="url(#arrowhead)" />

    <rect x="210" y="25" width="120" height="50" fill="#4CAF50" rx="4" />
    <text x="270" y="55" font-size="12" text-anchor="middle" fill="white">Document</text>

    <line x1="330" y1="35" x2="410" y2="35" stroke="currentColor" stroke-width="2" marker-end="url(#arrowhead)" />

    <rect x="410" y="25" width="120" height="50" fill="#2196F3" rx="4" />
    <text x="470" y="55" font-size="12" text-anchor="middle" fill="white">Main Chunk</text>

    <line x1="530" y1="65" x2="610" y2="65" stroke="currentColor" stroke-width="2" marker-end="url(#arrowhead)" />

    <rect x="610" y="25" width="120" height="50" fill="#FF9800" rx="4" />
    <text x="670" y="55" font-size="12" text-anchor="middle" fill="white">Page Chunk</text>
    <text x="670" y="15" font-size="12" text-anchor="middle" fill="currentColor">Visible</text>

    <line x1="730" y1="65" x2="810" y2="65" stroke="currentColor" stroke-width="2" marker-end="url(#arrowhead)" />

    <rect x="810" y="25" width="120" height="50" fill="#9C27B0" rx="4" />
    <text x="870" y="55" font-size="12" text-anchor="middle" fill="white">Page Data</text>
    <text x="870" y="15" font-size="12" text-anchor="middle" fill="currentColor">Done</text>

    <defs>
      <marker id="arrowhead" viewBox="0 0 8 8" refX="8" refY="4" orient="auto" markerWidth="6" markerHeight="6">
        <polygon points="0,0 8,4 0,8" fill="currentColor" />
      </marker>
    </defs>
  </svg>
</div>
We can observe that the data request is made only when the page is visible, and the page's scripts are requested only after the initial (main) script has executed.

When used to its full potential (with an edge worker), Adina can break the bundle into numerous small pieces, including its installed dependencies (packages, vendors) and the pages themselves. It then inlines only the requested page scripts in the initial document response.

As a result, this is the waterfall of Adina:
<div style="display: inline-block; max-width: 100%; overflow-x: auto">
  <svg xmlns="http://www.w3.org/2000/svg" width="540" height="110">
    <rect x="10" y="25" width="120" height="50" fill="#FF5722" rx="4" />
    <text x="70" y="55" font-size="12" text-anchor="middle" fill="white">Browser</text>

    <line x1="130" y1="35" x2="210" y2="35" stroke="currentColor" stroke-width="2" marker-end="url(#arrowhead)" />

    <rect x="210" y="25" width="120" height="50" fill="#4CAF50" rx="4" />
    <text x="270" y="55" font-size="12" text-anchor="middle" fill="white">Document</text>
    <text x="270" y="15" font-size="12" text-anchor="middle" fill="currentColor">Visible</text>
    <text x="270" y="90" font-size="10" text-anchor="middle" fill="#2196F3">Main Chunk</text>
    <text x="270" y="105" font-size="10" text-anchor="middle" fill="#FF9800">Page Chunk</text>

    <line x1="330" y1="35" x2="410" y2="35" stroke="currentColor" stroke-width="2" marker-end="url(#arrowhead)" />

    <rect x="410" y="25" width="120" height="50" fill="#9C27B0" rx="4" />
    <text x="470" y="55" font-size="12" text-anchor="middle" fill="white">Page Data</text>
    <text x="470" y="15" font-size="12" text-anchor="middle" fill="currentColor">Done</text>

    <defs>
      <marker id="arrowhead" viewBox="0 0 8 8" refX="8" refY="4" orient="auto" markerWidth="6" markerHeight="6">
        <polygon points="0,0 8,4 0,8" fill="currentColor" />
      </marker>
    </defs>
  </svg>
</div>
This enables the app to become visible incredibly fast, as all essential assets are downloaded in a single roundtrip!
In addition, data requests are queued as soon as the document's &lt;head&gt is downloaded, before the HTML parser reaches the document's &lt;body&gt.

After the page is loaded, the inline scripts are extracted from the document and passed to a service worker for caching.
Upon reloading the page, only the missing assets are injected (inlined) into the document.
If no assets are missing, the edge worker responds with a <strong><em>304 Not Modified</em></strong> status code, and no additional data is transferred.

Adina also split page dependencies, enabling them to be shared across different pages. Combined with the inlining of missing assets within the document, significantly enhances the app's resilience to cache invalidations, allowing it to load very quickly even when the cache is only partially available.

This website is built with Adina.
</pre>
